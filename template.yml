AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: CodeStar projectId used to associate new resources to team members
  CodeDeployRole:
    Type: String
    Description: IAM role to allow AWS CodeDeploy to manage deployment of AWS Lambda functions
  Stage:
    Type: String
    Description: The name for a project pipeline stage, such as Staging or Prod, for which resources are provisioned and deployed.
    Default: ''

Globals:
  Function:
    AutoPublishAlias: live
    DeploymentPreference:
      Enabled: true
      Type: Canary10Percent5Minutes # We use canary deployments
      Role: !Ref CodeDeployRole

Resources:
  CatDogApi:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda'
      Handler: index.handler
      Runtime: python3.7
      Environment:
        Variables:
          snsTopicArn: !Ref SNSNotificationTopic
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /catdog
            Method: get
        PostEvent:
          Type: Api
          Properties:
            Path: /catdog
            Method: post
  LambdaExecutionRole:
    Description: Creating service role in IAM for AWS Lambda
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'CodeStar-${ProjectId}-Execution${Stage}'
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonRekognitionCustomLabelsFullAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonS3ReadOnlyAccess'
      PermissionsBoundary: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/CodeStar_${ProjectId}_PermissionsBoundary'
      Policies:
        - PolicyName: CatDogPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'rekognition:DetectCustomLabels'
                Resource: '*'
              - Effect: Allow
                Action: 'sns:publish'
                Resource: '*'
  SNSNotificationTopic:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: CatDog-Ops
      Subscription: 
        - Endpoint: catdog@gpse.consulting
          Protocol: email
      TopicName: CatDogTopic
  User:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
         Name: api_key
         Type: String